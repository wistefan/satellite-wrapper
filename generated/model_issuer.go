/*
 * Trusted Issuers Registry
 *
 * The subset of the [Trusted Issuers Registryas defined by EBSI](https://api-pilot.ebsi.eu/docs/apis/trusted-issuers-registry/v4#/) as currently required by the [VCVerifier](https://github.com/FIWARE/VCVerifier).  
 *
 * API version: v3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package generated

type Issuer struct {

	// Issuer's DID
	Did string `json:"did,omitempty"`

	Attributes []IssuerAttribute `json:"attributes,omitempty"`
}

// AssertIssuerRequired checks if the required fields are not zero-ed
func AssertIssuerRequired(obj Issuer) error {
	for _, el := range obj.Attributes {
		if err := AssertIssuerAttributeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseIssuerRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Issuer (e.g. [][]Issuer), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIssuerRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIssuer, ok := obj.(Issuer)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIssuerRequired(aIssuer)
	})
}
